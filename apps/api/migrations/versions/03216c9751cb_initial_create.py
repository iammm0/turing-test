"""initial create

Revision ID: 03216c9751cb
Revises: 234099a5f8e6
Create Date: 2025-05-02 15:43:53.813398

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '03216c9751cb'
down_revision: Union[str, None] = '234099a5f8e6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_guesses_guessed_at', table_name='guesses')
    op.drop_table('guesses')
    op.drop_table('games')
    op.drop_index('idx_messages_ts', table_name='messages')
    op.drop_index('ix_messages_game_id', table_name='messages')
    op.drop_table('messages')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('display_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('elo', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('game_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sender', postgresql.ENUM('I', 'A', 'H', name='sender_role_enum'), autoincrement=False, nullable=False),
    sa.Column('recipient', postgresql.ENUM('I', 'A', 'H', name='recipient_role_enum'), autoincrement=False, nullable=False),
    sa.Column('body', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('ts', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='messages_game_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='messages_pkey')
    )
    op.create_index('ix_messages_game_id', 'messages', ['game_id'], unique=False)
    op.create_index('idx_messages_ts', 'messages', ['ts'], unique=False)
    op.create_table('games',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('interrogator_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('witness_human_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('witness_ai_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('CHATTING', 'JUDGING', 'ENDED', name='gamestatus_enum'), autoincrement=False, nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('ended_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['interrogator_id'], ['users.id'], name='games_interrogator_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['witness_ai_id'], ['users.id'], name='games_witness_ai_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['witness_human_id'], ['users.id'], name='games_witness_human_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='games_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('guesses',
    sa.Column('game_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('interrogator_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('guessed_ai_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('guessed_human_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_correct', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('guessed_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], name='guesses_game_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['guessed_ai_id'], ['users.id'], name='guesses_guessed_ai_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['guessed_human_id'], ['users.id'], name='guesses_guessed_human_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['interrogator_id'], ['users.id'], name='guesses_interrogator_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id', 'interrogator_id', name='guesses_pkey')
    )
    op.create_index('idx_guesses_guessed_at', 'guesses', ['guessed_at'], unique=False)
    # ### end Alembic commands ###
